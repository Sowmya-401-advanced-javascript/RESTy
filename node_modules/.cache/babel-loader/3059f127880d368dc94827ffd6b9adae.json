{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sowmya/codefellows/401/RESTy/react-lab26/src/Form.js\";\nimport React from 'react';\nimport './Form.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = e => {\n      let input = e.target.value;\n      this.setState({\n        url: input\n      }); // console.log(input);\n    };\n\n    this.handleMethod = e => {\n      e.preventDefault();\n      let newMethod = e.target.value; // console.log(newMethod);\n\n      this.setState({\n        method: newMethod\n      });\n    };\n\n    this.handleClick = e => {\n      e.preventDefault();\n\n      if (this.state.url && this.state.method) {\n        let newResult = `${this.state.method} ${this.state.url}`;\n        let newResultSet = `${newResult}\n${this.state.results}`;\n        this.setState({\n          results: newResultSet\n        }); // console.log(newResultSet);\n      }\n    };\n\n    this.getPokemon = async e => {\n      e.preventDefault();\n      const url = this.state.url;\n\n      try {\n        const poke = await fetch(url, {\n          method: this.state.method,\n          mode: 'cors'\n        });\n      } catch (err) {\n        console.err;\n      }\n\n      const pokeData = await poke.json();\n      var headersArray = [];\n\n      for (var pair of poke.headers.entries()) {\n        headersArray.push(pair);\n      } // .then(response => {\n      //   // console.log('poke', response.json());\n      //   // if(response.status !==200)return;\n      //   return response.json();\n      // });\n      // console.log(pokeData);\n\n\n      this.props.givePokemon(pokeData.results, pokeData.count, headersArray);\n    };\n\n    this.state = {\n      url: '',\n      method: '',\n      results: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"URL\",\n          children: \"URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"URL\",\n          onBlur: this.handleInput,\n          placeholder: \"Enter a URL....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getPokemon,\n          children: \"Go!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        id: \"method\",\n        onClick: this.handleMethod,\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \" Choose a method:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"GET\",\n          children: \"GET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"POST\",\n          children: \"POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"PUT\",\n          children: \"PUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"DELETE\",\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        id: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: this.state.results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/sowmya/codefellows/401/RESTy/react-lab26/src/Form.js"],"names":["React","Form","Component","constructor","props","handleInput","e","input","target","value","setState","url","handleMethod","preventDefault","newMethod","method","handleClick","state","newResult","newResultSet","results","getPokemon","poke","fetch","mode","err","console","pokeData","json","headersArray","pair","headers","entries","push","givePokemon","count","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Form.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      method: '',\n      results: ''\n    };\n  }\n\n  handleInput = e => {\n    let input = e.target.value;\n    this.setState({ url: input });\n    // console.log(input);\n  }\n\n  handleMethod = e => {\n    e.preventDefault();\n    let newMethod = e.target.value;\n    // console.log(newMethod);\n    this.setState({ method: newMethod });\n  }\n\n  handleClick = e => {\n    e.preventDefault();\n    if (this.state.url && this.state.method) {\n      let newResult = `${this.state.method} ${this.state.url}`;\n      let newResultSet = `${newResult}\n${this.state.results}`\n      this.setState({ results: newResultSet });\n      // console.log(newResultSet);\n    }\n  }\n\n  getPokemon = async (e) => {\n    e.preventDefault();\n    const url = this.state.url;\n\n    try{\n      const poke = await fetch(url, {method: this.state.method, mode: 'cors'})  \n    } catch(err) {\n      console.err\n    }\n    const pokeData = await poke.json();\n\n     var headersArray = []\n     for (var pair of poke.headers.entries()) {\n       headersArray.push(pair)\n     }\n      // .then(response => {\n      //   // console.log('poke', response.json());\n        \n      //   // if(response.status !==200)return;\n      //   return response.json();\n      // });\n      // console.log(pokeData);\n      this.props.givePokemon(pokeData.results, pokeData.count, headersArray);\n  }\n\n  render() {\n    return (\n      <div>\n      <form>\n      <label for=\"URL\" >URL:</label>\n      <input name=\"URL\" onBlur={this.handleInput}\n      placeholder=\"Enter a URL....\"/>\n      <button onClick={this.getPokemon}>Go!</button>\n      </form>\n      \n      <fieldset id='method' onClick={this.handleMethod}>\n          <legend> Choose a method:</legend>\n          <button value='GET'>GET</button>\n          <button value='POST'>POST</button>\n          <button value='PUT'>PUT</button>\n          <button value='DELETE'>DELETE</button>\n      </fieldset>\n      <fieldset id='result'>\n          <legend>Results:</legend>\n          <pre>{this.state.results}</pre>\n      </fieldset>\n\n      </div>\n    )\n  }\n}\n\n  export default Form;"]},"metadata":{},"sourceType":"module"}